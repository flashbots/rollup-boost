name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  REGISTRY_IMAGE: flashbots/rollup-boost

jobs:
  release:
    name: Publish Docker Image
    strategy:
      matrix:
        config:
          - platform: linux/amd64
            runner: warp-ubuntu-latest-x64-16x
          - platform: linux/arm64
            runner: warp-ubuntu-latest-arm64-16x
    runs-on: ${{ matrix.config.runner }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.0

      - name: Set env
        run: |
          platform=${{ matrix.config.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Print version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Extract metadata (tags, labels) for Docker images
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.FLASHBOTS_DOCKERHUB_USERNAME }}
          password: ${{ secrets.FLASHBOTS_DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
          platforms: ${{ matrix.config.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=registry,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: warp-ubuntu-latest-x64-16x
    needs:
      - release
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.FLASHBOTS_DOCKERHUB_USERNAME }}
          password: ${{ secrets.FLASHBOTS_DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.FLASHBOTS_GHCR_TOKEN }} # PAT required for Organization policy

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=sha
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ !contains(env.RELEASE_VERSION, '-rc') }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          image=$(
            jq -cr '.tags | first' <<< "$DOCKER_METADATA_OUTPUT_JSON"
          )

          docker buildx imagetools create -t $image $(
            printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *
          )

      - name: Install regctl
        uses: regclient/actions/regctl-installer@main

      - name: Push to GHCR
        run: |
          regctl image copy \
            ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }} \
            ghcr.io/${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}

  github-release:
    runs-on: warp-ubuntu-latest-x64-16x
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.0

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
